需求:程序员计算器  学QT的目标:开发平台设计思路和实现(算法的封装 数据建模) 嵌入式做UI 跨平台的游戏开发(实用小程序) GTK等UI库的总结使用 学到的知识:qt基本控件的使用  C++栈 字符串判断(按钮组变为整型) 程序逻辑与细节注意
项目:计算器优化 实现技巧:判断位加体验
标签显示:小数点按钮 符号按钮 退格按钮<-
键盘映射
逻辑(操作步骤)-分模块,步骤实现[(不断调试)数据处理 运算符 标志位(3(2)个:1.对运算符的判断 2.清空运算值  3.统计运算符个数次数的计算)]
1.再输入数字的话firstNum位置应该显示新值
2.追加改为赋新值(不可见的中间变量)
3.栈解析区运算(ms多个数运算)
4.运算符也可加进按钮组(addButton最后参自己定义,并不是值)//超过什么数就知道什么运算
5.第一位0替换,不能一直输入第一位为0,小数点只能输入一个 indexOf检查点是否大于0

QT的缺陷
移动开发：Qt传统的widget体系绘图使用的是CPU，在移动平台上效率过低。由于是基于跨平台考虑，代码结构上需要架设中间层进行适配，效率上会有所下降，比较明显的就是socket在高并发时Qt的性能问题就体现出来了。   效率与可优化方面的限制导致Qt不流行,桌面还可以,移动暂时不考虑,桌面Linux和嵌入式领域上深入